"""
Django settings for fishbook project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z4u1)mud=e#&4739)0%n6y*yvs_vfj3r6(hg%3od2ggr2u)7k9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user',
    'books',
    'xadmin', #xadmin
    'crispy_forms',  #xadmin
    'captcha',
    'trade',
    # 'ckeditor',   #添加ckeditor富文本编辑器
    # 'ckeditor_uploader',   #ckeditor进行文件上传
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fishbook.urls'

#如果用户继承了AbstractUser,修改auth_user的模型
AUTH_USER_MODEL='user.UserProfile'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',  #模板中引用上传的文件，并显示
            ],
        },
    },
]

WSGI_APPLICATION = 'fishbook.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'fishbook',
        'USER':'root',
        'PASSWORD':'123',
        'HOST':'127.0.0.1',
        'PROT':3306
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]
# STATIC_ROOT=os.path.join(BASE_DIR,'static')  #生产环境

MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR,'media')
CKEDITOR_UPLOAD_PATH='uploads/'

#发送邮箱设置
EMAIL_HOST='smtp.163.com'
EMAIL_HOST_USER='15201184475@163.com'
EMAIL_HOST_PASSWORD='cy15201184475'
EMAIL_PORT=25   #SMTP端口
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False  #126:465 ,  QQ:465  163:454

#添加一个登陆路由   结合 @login_required
LOGIN_URL='/user/login'

#字符串
PRIVATE_KEY_PATH=os.path.join(BASE_DIR,'alipay_key/private_key_2048.txt')
PUBLIC_KEY_PATH=os.path.join(BASE_DIR,'alipay_key/public_key_2048.txt')  #生成的支付宝公钥

# 使用本地的缓存系统     -----异步发送邮件
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/0',
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
# 配置异步任务
BROKER_URL = 'redis://127.0.0.1:6379/1'
# 存储结果并跟踪结果
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/1'
# 消息格式
CELERY_ACCEPT_CONNECT = ['application/json', ]
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
# celery的时区
CELERY_TIMEZONE = TIME_ZONE